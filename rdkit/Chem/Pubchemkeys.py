# $Id$
#
# Copyright (C) 2001-2011 greg Landrum and Rational Discovery LLC
#
#   @@ All Rights Reserved @@
#  This file is part of the RDKit.
#  The contents are covered by the terms of the BSD license
#  which is included in the file license.txt, found at the root
#  of the RDKit source tree.
#
""" SMARTS definitions for the publicly available MACCS keys
and a MACCS fingerprinter

I compared the MACCS fingerprints generated here with those from two
other packages (not MDL, unfortunately). Of course there are
disagreements between the various fingerprints still, but I think
these definitions work pretty well. Some notes:

1) most of the differences have to do with aromaticity
2) there's a discrepancy sometimes because the current RDKit
definitions do not require multiple matches to be distinct. e.g. the
SMILES C(=O)CC(=O) can match the (hypothetical) key O=CC twice in my
definition. It's not clear to me what the correct behavior is.
3) Some keys are not fully defined in the MDL documentation
4) Two keys, 125 and 166, have to be done outside of SMARTS.
5) Key 1 (ISOTOPE) isn't defined

Rev history:
2006 (gl): Original open-source release
May 2011 (gl): Update some definitions based on feedback from Andrew Dalke

"""

from rdkit import Chem
from rdkit.Chem import rdMolDescriptors
from rdkit import DataStructs
# these are SMARTS patterns corresponding to the MDL Pubchem keys
smartsPatts = {
    0: ('<H>',4),  #  4 H
    1: ('<H>',8),  #  8 H
    2: ('<H>',16),  #  16 H
    3: ('<H>',32),  #  32 H
    4: ('[Li]',1),  #  1 Li
    5: ('[Li]',2),  #  2 Li
    6: ('[#5]',1),  #  1 B
    7: ('[#5]',2),  #  2 B
    8: ('[#5]',4),  #  4 B
    9: ('[#6]',2),  #  2 C
    10: ('[#6]',4),  #  4 C
    11: ('[#6]',8),  #  8 C
    12: ('[#6]',16),  #  16 C
    13: ('[#6]',32),  #  32 C
    14: ('[#7]',1),  #  1 N
    15: ('[#7]',2),  #  2 N
    16: ('[#7]',4),  #  4 N
    17: ('[#7]',8),  #  8 N
    18: ('[#8]',1),  #  1 O
    19: ('[#8]',2),  #  2 O
    20: ('[#8]',4),  #  4 O
    21: ('[#8]',8),  #  8 O
    22: ('[#8]',16),  #  16 O
    23: ('[F]',1),  #  1 F
    24: ('[F]',2),  #  2 F
    25: ('[F]',4),  #  4 F
    26: ('[Na]',1),  #  1 Na
    27: ('[Na]',2),  #  2 Na
    28: ('[#14]',1),  #  1 Si
    29: ('[#14]',2),  #  2 Si
    30: ('[#15]',1),  #  1 P
    31: ('[#15]',2),  #  2 P
    32: ('[#15]',4),  #  4 P
    33: ('[#16]',1),  #  1 S
    34: ('[#16]',2),  #  2 S
    35: ('[#16]',4),  #  4 S
    36: ('[#16]',8),  #  8 S
    37: ('[Cl]',1),  #  1 Cl
    38: ('[Cl]',2),  #  2 Cl
    39: ('[Cl]',4),  #  4 Cl
    40: ('[Cl]',8),  #  8 Cl
    41: ('[K]',1),  #  1 K
    42: ('[K]',2),  #  2 K
    43: ('[Br]',1),  #  1 Br
    44: ('[Br]',2),  #  2 Br
    45: ('[Br]',4),  #  4 Br
    46: ('[I]',1),  #  1 I
    47: ('[I]',2),  #  2 I
    48: ('[I]',4),  #  4 I
    49: ('[Be]',1),  #  1 Be
    50: ('[Mg]',1),  #  1 Mg
    51: ('[Al]',1),  #  1 Al
    52: ('[Ca]',1),  #  1 Ca
    53: ('[Sc]',1),  #  1 Sc
    54: ('[Ti]',1),  #  1 Ti
    55: ('[V]',1),  #  1 V
    56: ('[Cr]',1),  #  1 Cr
    57: ('[Mn]',1),  #  1 Mn
    58: ('[Fe]',1),  #  1 Fe
    59: ('[Co]',1),  #  1 Co
    60: ('[Ni]',1),  #  1 Ni
    61: ('[Cu]',1),  #  1 Cu
    62: ('[Zn]',1),  #  1 Zn
    63: ('[Ga]',1),  #  1 Ga
    64: ('[#32]',1),  #  1 Ge
    65: ('[#33]',1),  #  1 As
    66: ('[#34]',1),  #  1 Se
    67: ('[Kr]',1),  #  1 Kr
    68: ('[Rb]',1),  #  1 Rb
    69: ('[Sr]',1),  #  1 Sr
    70: ('[Y]',1),  #  1 Y
    71: ('[Zr]',1),  #  1 Zr
    72: ('[Nb]',1),  #  1 Nb
    73: ('[Mo]',1),  #  1 Mo
    74: ('[Ru]',1),  #  1 Ru
    75: ('[Rh]',1),  #  1 Rh
    76: ('[Pd]',1),  #  1 Pd
    77: ('[Ag]',1),  #  1 Ag
    78: ('[Cd]',1),  #  1 Cd
    79: ('[In]',1),  #  1 In
    80: ('[Sn]',1),  #  1 Sn
    81: ('[Sb]',1),  #  1 Sb
    82: ('[#52]',1),  #  1 Te
    83: ('[Xe]',1),  #  1 Xe
    84: ('[Cs]',1),  #  1 Cs
    85: ('[Ba]',1),  #  1 Ba
    86: ('[Lu]',1),  #  1 Lu
    87: ('[Hf]',1),  #  1 Hf
    88: ('[Ta]',1),  #  1 Ta
    89: ('[W]',1),  #  1 W
    90: ('[Re]',1),  #  1 Re
    91: ('[Os]',1),  #  1 Os
    92: ('[Ir]',1),  #  1 Ir
    93: ('[Pt]',1),  #  1 Pt
    94: ('[Au]',1),  #  1 Au
    95: ('[Hg]',1),  #  1 Hg
    96: ('[Tl]',1),  #  1 Tl
    97: ('[Pb]',1),  #  1 Pb
    98: ('[Bi]',1),  #  1 Bi
    99: ('[La]',1),  #  1 La
    100: ('[Ce]',1),  #  1 Ce
    101: ('[Pr]',1),  #  1 Pr
    102: ('[Nd]',1),  #  1 Nd
    103: ('[Pm]',1),  #  1 Pm
    104: ('[Sm]',1),  #  1 Sm
    105: ('[Eu]',1),  #  1 Eu
    106: ('[Gd]',1),  #  1 Gd
    107: ('[Tb]',1),  #  1 Tb
    108: ('[Dy]',1),  #  1 Dy
    109: ('[Ho]',1),  #  1 Ho
    110: ('[Er]',1),  #  1 Er
    111: ('[Tm]',1),  #  1 Tm
    112: ('[Yb]',1),  #  1 Yb
    113: ('[Tc]',1),  #  1 Tc
    114: ('[U]',1),  #  1 U
    115: ('*~1~*~*1',1),  #  1 any ring size 3
    116: ('c1cc1',1),  #  1 aromatic carbon-only ring size 3
    117: ('n1aa1',1),  #  1 aromatic nitrogen-containing ring size 3
    118: ('[a;!#6]1aa1',1),  #  1 aromatic heteroatom-containing ring size 3
    119: ('C~1~C~C1',1),  #  1 non-aromatic carbon-only ring size 3
    120: ('N~1~A~A1',1),  #  1 non-aromatic nitrogen-containing ring size 3
    121: ('[A;!#6]~1~A~A1',1),  #  1 non-aromatic heteroatom-containing ring size 3
    122: ('*~1~*~*1',2),  #  2 any ring size 3
    123: ('c1cc1',2),  #  2 aromatic carbon-only ring size 3
    124: ('n1aa1',2),  #  2 aromatic nitrogen-containing ring size 3
    125: ('[a;!#6]1aa1',2),  #  2 aromatic heteroatom-containing ring size 3
    126: ('C~1~C~C1',2),  #  2 non-aromatic carbon-only ring size 3
    127: ('N~1~A~A1',2),  #  2 non-aromatic nitrogen-containing ring size 3
    128: ('[A;!#6]~1~A~A1',2),  #  2 non-aromatic heteroatom-containing ring size 3
    129: ('*~1~*~*~*1',1),  #  1 any ring size 4
    130: ('c1ccc1',1),  #  1 carbon-only ring size 4
    131: ('n1aaa1',1),  #  1 nitrogen-containing ring size 4
    132: ('[a;!#6]1aaa1',1),  #  1 heteroatom-containing ring size 4
    133: ('C~1~C~C~C1',1),  #  1 non-aromatic carbon-only ring size 4
    134: ('N~1~A~A~A1',1),  #  1 non-aromatic nitrogen-containing ring size 4
    135: ('[A;!#6]~1~A~A~A1',1),  #  1 non-aromatic heteroatom-containing ring size 4
    136: ('*~1~*~*~*1',2),  #  2 any ring size 4
    137: ('c1ccc1',2),  #  2 aromatic carbon-only ring size 4
    138: ('n1aaa1',2),  #  2 aromatic nitrogen-containing ring size 4
    139: ('[a;!#6]1aaa1',2),  #  2 aromatic heteroatom-containing ring size 4
    140: ('C~1~C~C~C1',2),  #  2 non-aromatic carbon-only ring size 4
    141: ('N~1~A~A~A1',2),  #  2 non-aromatic nitrogen-containing ring size 4
    142: ('[A;!#6]~1~A~A~A1',2),  #  2 non-aromatic heteroatom-containing ring size 4
    143: ('*~1~*~*~*~*1',1),  #  1 any ring size 5
    144: ('c1cccc1',1),  #  1 aromatic carbon-only ring size 5
    145: ('n1aaaa1',1),  #  1 aromatic nitrogen-containing ring size 5
    146: ('[a;!#6]1aaaa1',1),  #  1 aromatic heteroatom-containing ring size 5
    147: ('C~1~C~C~C~C1',1),  #  1 non-aromatic carbon-only ring size 5
    148: ('N~1~A~A~A~A1',1),  #  1 non-aromatic nitrogen-containing ring size 5
    149: ('[A;!#6]~1A~A~A~A1',1),  #  1 non-aromatic heteroatom-containing ring size 5
    150: ('*~1~*~*~*~*1',2),  #  2 any ring size 5
    151: ('c1cccc1',2),  #  2 aromatic carbon-only ring size 5
    152: ('n1aaaa1',2),  #  2 aromatic nitrogen-containing ring size 5
    153: ('[a;!#6]1aaaa1',2),  #  2 aromatic heteroatom-containing ring size 5
    154: ('C~1~C~C~C~C1',2),  #  2 non-aromatic carbon-only ring size 5
    155: ('N~1~A~A~A~A1',2),  #  2 non-aromatic nitrogen-containing ring size 5
    156: ('[A;!#6]~1A~A~A~A1',2),  #  2 non-aromatic heteroatom-containing ring size 5
    157: ('*~1~*~*~*~*1',3),  #  3 any ring size 5
    158: ('c1cccc1',3),  #  3 aromatic carbon-only ring size 5
    159: ('n1aaaa1',3),  #  3 aromatic nitrogen-containing ring size 5
    160: ('[a;!#6]1aaaa1',3),  #  3 aromatic heteroatom-containing ring size 5
    161: ('C~1~C~C~C~C1',3),  #  3 non-aromatic carbon-only ring size 5
    162: ('N~1~A~A~A~A1',3),  #  3 non-aromatic nitrogen-containing ring size 5
    163: ('[A;!#6]~1A~A~A~A1',3),  #  3 non-aromatic heteroatom-containing ring size 5
    164: ('*~1~*~*~*~*1',4),  #  4 any ring size 5
    165: ('c1cccc1',4),  #  4 aromatic carbon-only ring size 5
    166: ('n1aaaa1',4),  #  4 aromatic nitrogen-containing ring size 5
    167: ('[a;!#6]1aaaa1',4),  #  4 aromatic heteroatom-containing ring size 5
    168: ('C~1~C~C~C~C1',4),  #  4 non-aromatic carbon-only ring size 5
    169: ('N~1~A~A~A~A1',4),  #  4 non-aromatic nitrogen-containing ring size 5
    170: ('[A;!#6]~1A~A~A~A1',4),  #  4 non-aromatic heteroatom-containing ring size 5
    171: ('*~1~*~*~*~*1',5),  #  5 any ring size 5
    172: ('c1cccc1',5),  #  5 aromatic carbon-only ring size 5
    173: ('n1aaaa1',5),  #  5 aromatic nitrogen-containing ring size 5
    174: ('[a;!#6]1aaaa1',5),  #  5 aromatic heteroatom-containing ring size 5
    175: ('C~1~C~C~C~C1',5),  #  5 non-aromatic carbon-only ring size 5
    176: ('N~1~A~A~A~A1',5),  #  5 non-aromatic nitrogen-containing ring size 5
    177: ('[A;!#6]~1A~A~A~A1',5),  #  5 non-aromatic heteroatom-containing ring size 5
    178: ('*~1~*~*~*~*~*1',1),  #  1 any ring size 6
    179: ('c1ccccc1',1),  #  1 aromatic carbon-only ring size 6
    180: ('n1aaaaa1',1),  #  1 aromatic nitrogen-containing ring size 6
    181: ('[a;!#6]1aaaaa1',1),  #  1 aromatic heteroatom-containing ring size 6
    182: ('C~1~C~C~C~C~C1',1),  #  1 non-aromatic carbon-only ring size 6
    183: ('N~1~A~A~A~A~A1',1),  #  1 non-aromatic nitrogen-containing ring size 6
    184: ('[A;!#6]~1~A~A~A~A~A1',1),  #  1 non-aromatic heteroatom-containing ring size 6
    185: ('*~1~*~*~*~*~*1',2),  #  2 any ring size 6
    186: ('c1ccccc1',2),  #  2 aromatic carbon-only ring size 6
    187: ('n1aaaaa1',2),  #  2 aromatic nitrogen-containing ring size 6
    188: ('[a;!#6]1aaaaa1',2),  #  2 aromatic heteroatom-containing ring size 6
    189: ('C~1~C~C~C~C~C1',2),  #  2 non-aromatic carbon-only ring size 6
    190: ('N~1~A~A~A~A~A1',2),  #  2 non-aromatic nitrogen-containing ring size 6
    191: ('[A;!#6]~1~A~A~A~A~A1',2),  #  2 non-aromatic heteroatom-containing ring size 6
    192: ('*~1~*~*~*~*~*1',3),  #  3 any ring size 6
    193: ('c1ccccc1',3),  #  3 aromatic carbon-only ring size 6
    194: ('n1aaaaa1',3),  #  3 aromatic nitrogen-containing ring size 6
    195: ('[a;!#6]1aaaaa1',3),  #  3 aromatic heteroatom-containing ring size 6
    196: ('C~1~C~C~C~C~C1',3),  #  3 non-aromatic carbon-only ring size 6
    197: ('N~1~A~A~A~A~A1',3),  #  3 non-aromatic nitrogen-containing ring size 6
    198: ('[A;!#6]~1~A~A~A~A~A1',3),  #  3 non-aromatic heteroatom-containing ring size 6
    199: ('*~1~*~*~*~*~*1',4),  #  4 any ring size 6
    200: ('c1ccccc1',4),  #  4 aromatic carbon-only ring size 6
    201: ('n1aaaaa1',4),  #  4 aromatic nitrogen-containing ring size 6
    202: ('[a;!#6]1aaaaa1',4),  #  4 aromatic heteroatom-containing ring size 6
    203: ('C~1~C~C~C~C~C1',4),  #  4 non-aromatic carbon-only ring size 6
    204: ('N~1~A~A~A~A~A1',4),  #  4 non-aromatic nitrogen-containing ring size 6
    205: ('[A;!#6]~1~A~A~A~A~A1',4),  #  4 non-aromatic heteroatom-containing ring size 6
    206: ('*~1~*~*~*~*~*1',5),  #  5 any ring size 6
    207: ('c1ccccc1',5),  #  5 aromatic carbon-only ring size 6
    208: ('n1aaaaa1',5),  #  5 aromatic nitrogen-containing ring size 6
    209: ('[a;!#6]1aaaaa1',5),  #  5 aromatic heteroatom-containing ring size 6
    210: ('C~1~C~C~C~C~C1',5),  #  5 non-aromatic carbon-only ring size 6
    211: ('N~1~A~A~A~A~A1',5),  #  5 non-aromatic nitrogen-containing ring size 6
    212: ('[A;!#6]~1~A~A~A~A~A1',5),  #  5 non-aromatic heteroatom-containing ring size 6
    213: ('*~1~*~*~*~*~*~*1',1),  #  1 any ring size 7
    214: ('c1cccccc1',1),  #  1 aromatic carbon-only ring size 7
    215: ('n1aaaaaa1',1),  #  1 aromatic nitrogen-containing ring size 7
    216: ('[a;!#6]1aaaaaa1',1),  #  1 aromatic heteroatom-containing ring size 7
    217: ('C~1~C~C~C~C~C~C1',1),  #  1 non-aromatic carbon-only ring size 7
    218: ('N~1~A~A~A~A~A~A1',1),  #  1 non-aromatic nitrogen-containing ring size 7
    219: ('[A;!#6]~1~A~A~A~A~A~A1',1),  #  1 non-aromatic heteroatom-containing ring size 7
    220: ('*~1~*~*~*~*~*~*1',2),  #  2 any ring size 7
    221: ('c1cccccc1',2),  #  2 aromatic carbon-only ring size 7
    222: ('n1aaaaaa1',2),  #  2 aromatic nitrogen-containing ring size 7
    223: ('[a;!#6]1aaaaaa1',2),  #  2 aromatic heteroatom-containing ring size 7
    224: ('C~1~C~C~C~C~C~C1',2),  #  2 non-aromatic carbon-only ring size 7
    225: ('N~1~A~A~A~A~A~A1',2),  #  2 non-aromatic nitrogen-containing ring size 7
    226: ('[A;!#6]~1~A~A~A~A~A~A1',2),  #  2 non-aromatic heteroatom-containing ring size 7
    227: ('*~1~*~*~*~*~*~*~*1',1),  #  1 any ring size 8
    228: ('c1ccccccc1',1),  #  1 aromatic carbon-only ring size 8
    229: ('n1aaaaaaa1',1),  #  1 aromatic nitrogen-containing ring size 8
    230: ('[a;!#6]1aaaaaaa1',1),  #  1 aromatic heteroatom-containing ring size 8
    231: ('C~1~C~C~C~C~C~C~C1',1),  #  1 non-aromatic carbon-only ring size 8
    232: ('N~1~A~A~A~A~A~A~A1',1),  #  1 non-aromatic nitrogen-containing ring size 8
    233: ('[A;!#6]~1~A~A~A~A~A~A~A1',1),  #  1 non-aromatic heteroatom-containing ring size 8
    234: ('*~1~*~*~*~*~*~*~*1',2),  #  2 any ring size 8
    235: ('c1ccccccc1',2),  #  2 aromatic carbon-only ring size 8
    236: ('n1aaaaaaa1',2),  #  2 aromatic nitrogen-containing ring size 8
    237: ('[a;!#6]1aaaaaaa1',2),  #  2 aromatic heteroatom-containing ring size 8
    238: ('C~1~C~C~C~C~C~C~C1',2),  #  2 non-aromatic carbon-only ring size 8
    239: ('N~1~A~A~A~A~A~A~A1',2),  #  2 non-aromatic nitrogen-containing ring size 8
    240: ('[A;!#6]~1~A~A~A~A~A~A~A1',2),  #  2 non-aromatic heteroatom-containing ring size 8
    241: ('*~1~*~*~*~*~*~*~*~*1',1),  #  1 any ring size 9
    242: ('c1cccccccc1',1),  #  1 aromatic carbon-only ring size 9
    243: ('n1aaaaaaaa1',1),  #  1 aromatic nitrogen-containing ring size 9
    244: ('[a;!#6]1aaaaaaaa1',1),  #  1 aromatic heteroatom-containing ring size 9
    245: ('C~1~C~C~C~C~C~C~C~C1',1),  #  1 non-aromatic carbon-only ring size 9
    246: ('N~1~A~A~A~A~A~A~A~A1',1),  #  1 non-aromatic nitrogen-containing ring size 9
    247: ('[A;!#6]~1~A~A~A~A~A~A~A~A1',1),  #  1 non-aromatic heteroatom-containing ring size 9
    248: ('*~1~*~*~*~*~*~*~*~*~*1',1),  #  1 any ring size 10
    249: ('c1ccccccccc1',1),  #  1 aromatic carbon-only ring size 10
    250: ('n1aaaaaaaaa1',1),  #  1 aromatic nitrogen-containing ring size 10
    251: ('[a;!#6]1aaaaaaaaa1',1),  #  1 aromatic heteroatom-containing ring size 10
    252: ('C~1~C~C~C~C~C~C~C~C~C1',1),  #  1 non-aromatic carbon-only ring size 10
    253: ('N~1~A~A~A~A~A~A~A~A~A1',1),  #  1 non-aromatic nitrogen-containing ring size 10
    254: ('[A;!#6]~1~A~A~A~A~A~A~A~A~A1',1),  #  1 non-aromatic heteroatom-containing ring size 10
    255: ('[aR]',1),  #  1 aromatic ring
    256: ('[aR;!#6]',1),  #  1 hetero-aromatic ring
    257: ('<aromatic-rings>',2),  #  2 aromatic rings
    258: ('<hetero-aromatic-rings>',2),  #  2 hetero-aromatic rings
    259: ('<aromatic-rings>',3),  #  3 aromatic rings
    260: ('<hetero-aromatic-rings>',3),  #  3 hetero-aromatic rings
    261: ('<aromatic-rings>',4),  #  4 aromatic rings
    262: ('<hetero-aromatic-rings>',4),  #  4 hetero-aromatic rings
    263: ('[Li;!H0]',1),  #  Li-H
    264: ('[Li]~[Li]',1),  #  Li-Li
    265: ('[Li]~[#5]',1),  #  Li-B
    266: ('[Li]~[#6]',1),  #  Li-C
    267: ('[Li]~[#8]',1),  #  Li-O
    268: ('[Li]~[F]',1),  #  Li-F
    269: ('[Li]~[#15]',1),  #  Li-P
    270: ('[Li]~[#16]',1),  #  Li-S
    271: ('[Li]~[Cl]',1),  #  Li-Cl
    272: ('[#5;!H0]',1),  #  B-H
    273: ('[#5]~[#5]',1),  #  B-B
    274: ('[#5]~[#6]',1),  #  B-C
    275: ('[#5]~[#7]',1),  #  B-N
    276: ('[#5]~[#8]',1),  #  B-O
    277: ('[#5]~[F]',1),  #  B-F
    278: ('[#5]~[#6]',1),  #  B-Si
    279: ('[#5]~[#15]',1),  #  B-P
    280: ('[#5]~[#16]',1),  #  B-S
    281: ('[#5]~[Cl]',1),  #  B-Cl
    282: ('[#5]~[Br]',1),  #  B-Br
    283: ('[#6;!H0]',1),  #  C-H
    284: ('[#6]~[#6]',1),  #  C-C
    285: ('[#6]~[#7]',1),  #  C-N
    286: ('[#6]~[#8]',1),  #  C-O
    287: ('[#6]~[F]',1),  #  C-F
    288: ('[#6]~[Na]',1),  #  C-Na
    289: ('[#6]~[Mg]',1),  #  C-Mg
    290: ('[#6]~[Al]',1),  #  C-Al
    291: ('[#6]~[#14]',1),  #  C-Si
    292: ('[#6]~[#15]',1),  #  C-P
    293: ('[#6]~[#16]',1),  #  C-S
    294: ('[#6]~[Cl]',1),  #  C-Cl
    295: ('[#6]~[#33]',1),  #  C-As
    296: ('[#6]~[#34]',1),  #  C-Se
    297: ('[#6]~[Br]',1),  #  C-Br
    298: ('[#6]~[I]',1),  #  C-I
    299: ('[#7;!H0]',1),  #  N-H
    300: ('[#7]~[#7]',1),  #  N-N
    301: ('[#7]~[#8]',1),  #  N-O
    302: ('[#7]~[F]',1),  #  N-F
    303: ('[#7]~[#14]',1),  #  N-Si
    304: ('[#7]~[#15]',1),  #  N-P
    305: ('[#7]~[#16]',1),  #  N-S
    306: ('[#7]~[Cl]',1),  #  N-Cl
    307: ('[#7]~[Br]',1),  #  N-Br
    308: ('[#8;!H0]',1),  #  O-H
    309: ('[#8]~[#8]',1),  #  O-O
    310: ('[#8]~[Mg]',1),  #  O-Mg
    311: ('[#8]~[Na]',1),  #  O-Na
    312: ('[#8]~[Al]',1),  #  O-Al
    313: ('[#8]~[#14]',1),  #  O-Si
    314: ('[#8]~[#15]',1),  #  O-P
    315: ('[#8]~[K]',1),  #  O-K
    316: ('[F]~[#15]',1),  #  F-P
    317: ('[F]~[#16]',1),  #  F-S
    318: ('[Al;!H0]',1),  #  Al-H
    319: ('[Al]~[Cl]',1),  #  Al-Cl
    320: ('[#14;!H0]',1),  #  Si-H
    321: ('[#14]~[#14]',1),  #  Si-Si
    322: ('[#14]~[Cl]',1),  #  Si-Cl
    323: ('[#15;!H0]',1),  #  P-H
    324: ('[#15]~[#15]',1),  #  P-P
    325: ('[#33;!H0]',1),  #  As-H
    326: ('[#33]~[#33]',1),  #  As-As
    327: ('[#6](~Br)(~[#6])',1),  #  C(~Br)(~C)
    328: ('[#6](~Br)(~[#6])(~[#6])',1),  #  C(~Br)(~C)(~C)
    329: ('[#6;!H0](~Br)',1),  #  C(~Br)(~H)
    330: ('c(~Br)(:c)',1),  #  C(~Br)(:C)
    331: ('c(~Br)(:n)',1),  #  C(~Br)(:N)
    332: ('[#6](~[#6])(~[#6])',1),  #  C(~C)(~C)
    333: ('[#6](~[#6])(~[#6])(~[#6])',1),  #  C(~C)(~C)(~C)
    334: ('[#6](~[#6])(~[#6])(~[#6])(~[#6])',1),  #  C(~C)(~C)(~C)(~C)
    335: ('[#6;!H0](~[#6])(~[#6])(~[#6])',1),  #  C(~C)(~C)(~C)(~H)
    336: ('[#6](~[#6])(~[#6])(~[#6])(~[#7])',1),  #  C(~C)(~C)(~C)(~N)
    337: ('[#6](~[#6])(~[#6])(~[#6])(~[#8])',1),  #  C(~C)(~C)(~C)(~O)
    338: ('[#6;!H0](~[#6])(~[#6])(~[#7])',1),  #  C(~C)(~C)(~H)(~N)
    339: ('[#6;!H0](~[#6])(~[#6])(~[#8])',1),  #  C(~C)(~C)(~H)(~O)
    340: ('[#6](~[#6])(~[#6])(~[#7])',1),  #  C(~C)(~C)(~N)
    341: ('[#6](~[#6])(~[#6])(~[#8])',1),  #  C(~C)(~C)(~O)
    342: ('[#6](~[#6])(~Cl)',1),  #  C(~C)(~Cl)
    343: ('[#6;!H0](~[#6])(~Cl)',1),  #  C(~C)(~Cl)(~H)
    344: ('[#6;!H0](~[#6])',1),  #  C(~C)(~H)
    345: ('[#6;!H0](~[#6])(~[#7])',1),  #  C(~C)(~H)(~N)
    346: ('[#6;!H0](~[#6])(~[#8])',1),  #  C(~C)(~H)(~O)
    347: ('[#6;!H0](~[#6])(~[#8])(~[#8])',1),  #  C(~C)(~H)(~O)(~O)
    348: ('[#6;!H0](~[#6])(~[#15])',1),  #  C(~C)(~H)(~P)
    349: ('[#6;!H0](~[#6])(~[#16])',1),  #  C(~C)(~H)(~S)
    350: ('[#6](~[#6])(~I)',1),  #  C(~C)(~I)
    351: ('[#6](~[#6])(~[#7])',1),  #  C(~C)(~N)
    352: ('[#6](~[#6])(~[#8])',1),  #  C(~C)(~O)
    353: ('[#6](~[#6])(~[#16])',1),  #  C(~C)(~S)
    354: ('[#6](~[#6])(~[#14])',1),  #  C(~C)(~Si)
    355: ('c(~[#6])(:c)',1),  #  C(~C)(:C)
    356: ('c(~[#6])(:c)(:c)',1),  #  C(~C)(:C)(:C)
    357: ('c(~[#6])(:c)(:n)',1),  #  C(~C)(:C)(:N)
    358: ('c(~[#6])(:n)',1),  #  C(~C)(:N)
    359: ('c(~[#6])(:n)(:n)',1),  #  C(~C)(:N)(:N)
    360: ('[#6](~Cl)(~Cl)',1),  #  C(~Cl)(~Cl)
    361: ('[#6;!H0](~Cl)',1),  #  C(~Cl)(~H)
    362: ('c(~Cl)(:c)',1),  #  C(~Cl)(:C)
    363: ('[#6](~F)(~F)',1),  #  C(~F)(~F)
    364: ('c(~F)(:c)',1),  #  C(~F)(:C)
    365: ('[#6;!H0](~[#7])',1),  #  C(~H)(~N)
    366: ('[#6;!H0](~[#8])',1),  #  C(~H)(~O)
    367: ('[#6;!H0](~[#8])(~[#8])',1),  #  C(~H)(~O)(~O)
    368: ('[#6;!H0](~[#16])',1),  #  C(~H)(~S)
    369: ('[#6;!H0](~[#14])',1),  #  C(~H)(~Si)
    370: ('[c;!H0](:c)',1),  #  C(~H)(:C)
    371: ('[c;!H0](:c)(:c)',1),  #  C(~H)(:C)(:C)
    372: ('[c;!H0](:c)(:n)',1),  #  C(~H)(:C)(:N)
    373: ('[c;!H0](:n)',1),  #  C(~H)(:N)
    374: ('[#6;!H0;!H1;!H2]',1),  #  C(~H)(~H)(~H)
    375: ('[#6](~[#7])(~[#7])',1),  #  C(~N)(~N)
    376: ('c(~[#7])(:c)',1),  #  C(~N)(:C)
    377: ('c(~[#7])(:c)(:c)',1),  #  C(~N)(:C)(:C)
    378: ('c(~[#7])(:c)(:n)',1),  #  C(~N)(:C)(:N)
    379: ('c(~[#7])(:n)',1),  #  C(~N)(:N)
    380: ('[#6](~[#8])(~[#8])',1),  #  C(~O)(~O)
    381: ('c(~[#8])(:c)',1),  #  C(~O)(:C)
    382: ('c(~[#8])(:c)(:c)',1),  #  C(~O)(:C)(:C)
    383: ('c(~[#16])(:c)',1),  #  C(~S)(:C)
    384: ('c(:c)(:c)',1),  #  C(:C)(:C)
    385: ('c(:c)(:c)(:c)',1),  #  C(:C)(:C)(:C)
    386: ('c(:c)(:c)(:n)',1),  #  C(:C)(:C)(:N)
    387: ('c(:c)(:n)',1),  #  C(:C)(:N)
    388: ('c(:c)(:n)(:n)',1),  #  C(:C)(:N)(:N)
    389: ('c(:n)(:n)',1),  #  C(:N)(:N)
    390: ('[#7](~[#6])(~[#6])',1),  #  N(~C)(~C)
    391: ('[#7](~[#6])(~[#6])(~[#6])',1),  #  N(~C)(~C)(~C)
    392: ('[#7;!H0](~[#6])(~[#6])',1),  #  N(~C)(~C)(~H)
    393: ('[#7;!H0](~[#6])',1),  #  N(~C)(~H)
    394: ('[#7;!H0](~[#6])(~[#7])',1),  #  N(~C)(~H)(~N)
    395: ('[#7](~[#6])(~[#8])',1),  #  N(~C)(~O)
    396: ('n(~[#6])(:c)',1),  #  N(~C)(:C)
    397: ('n(~[#6])(:c)(:c)',1),  #  N(~C)(:C)(:C)
    398: ('[#7;!H0](~[#7])',1),  #  N(~H)(~N)
    399: ('[n;!H0](:c)',1),  #  N(~H)(:C)
    400: ('[n;!H0](:c)(:c)',1),  #  N(~H)(:C)(:C)
    401: ('[#7](~[#8])(~[#8])',1),  #  N(~O)(~O)
    402: ('n(~[#8])(:o)',1),  #  N(~O)(:O)
    403: ('n(:c)(:c)',1),  #  N(:C)(:C)
    404: ('n(:c)(:c)(:c)',1),  #  N(:C)(:C)(:C)
    405: ('[#8](~[#6])(~[#6])',1),  #  O(~C)(~C)
    406: ('[#8;!H0](~[#6])',1),  #  O(~C)(~H)
    407: ('[#8](~[#6])(~[#15])',1),  #  O(~C)(~P)
    408: ('[#8;!H0](~[#16])',1),  #  O(~H)(~S)
    409: ('o(:c)(:c)',1),  #  O(:C)(:C)
    410: ('[#15](~[#6])(~[#6])',1),  #  P(~C)(~C)
    411: ('[#15](~[#8])(~[#8])',1),  #  P(~O)(~O)
    412: ('[#16](~[#6])(~[#6])',1),  #  S(~C)(~C)
    413: ('[#16;!H0](~[#6])',1),  #  S(~C)(~H)
    414: ('[#16](~[#6])(~[#8])',1),  #  S(~C)(~O)
    415: ('[#14](~[#6])(~[#6])',1),  #  Si(~C)(~C)
    416: ('[#6]=,:[#6]',1),  # C=C
    417: ('[#6]#[#6]',1),  # C#C
    418: ('[#6]=,:[#7]',1),  # C=N
    419: ('[#6]#[#7]',1),  # C#N
    420: ('[#6]=,:[#8]',1),  # C=O
    421: ('[#6]=,:[s,S]',1),  # C=S
    422: ('[#7]=,:[#7]',1),  # N=N
    423: ('[#7]=,:[#8]',1),  # N=O
    424: ('[#7]=,:[#15]',1),  # N=P
    425: ('[#15]=,:[#8]',1),  # P=O
    426: ('[#15]=,:[#15]',1),  # P=P
    427: ('[#6]#[#6]-,:[#6]',1),  # C(#C)(-C)
    428: ('[#6;!H0]#[#6]',1),  # C(#C)(-H)
    429: ('[#7]#[#6]-,:[#6]',1),  # C(#N)(-C)
    430: ('[#6](-,:[#6])(-,:[#6])(=,:[#6])',1),  # C(-C)(-C)(=C)
    431: ('[#6](-,:[#6])(-,:[#6])(=,:[#7])',1),  # C(-C)(-C)(=N)
    432: ('[#6](-,:[#6])(-,:[#6])(=,:[#8])',1),  # C(-C)(-C)(=O)
    433: ('[#6](-,:[#6])(Cl)(=,:[#8])',1),  # C(-C)(-Cl)(=O)
    434: ('[#6&!H0](-,:[#6])(=,:[#6])',1),  # C(-C)(-H)(=C)
    435: ('[#6&!H0](-,:[#6])(=,:[#7])',1),  # C(-C)(-H)(=N)
    436: ('[#6&!H0](-,:[#6])(=,:[#8])',1),  # C(-C)(-H)(=O)
    437: ('[#6](-,:[#6])(-,:[#7])(=,:[#6])',1),  # C(-C)(-N)(=C)
    438: ('[#6](-,:[#6])(-,:[#7])(=,:[#7])',1),  # C(-C)(-N)(=N)
    439: ('[#6](-,:[#6])(-,:[#7])(=,:[#8])',1),  # C(-C)(-N)(=O)
    440: ('[#6](-,:[#6])(-,:[#8])(=,:[#8])',1),  # C(-C)(-O)(=O)
    441: ('[#6](-,:[#6])(=,:[#6])',1),  # C(-C)(=C)
    442: ('[#6](-,:[#6])(=,:[#7])',1),  # C(-C)(=N)
    443: ('[#6](-,:[#6])(=,:[#8])',1),  # C(-C)(=O)
    444: ('[#6](Cl)(=,:[#8])',1),  # C(-Cl)(=O)
    445: ('[#6;!H0](-,:[#7])(=,:[#6])',1),  # C(-H)(-N)(=C)
    446: ('[#6;!H0](=,:[#6])',1),  # C(-H)(=C)
    447: ('[#6;!H0](=,:[#7])',1),  # C(-H)(=N)
    448: ('[#6;!H0](=,:[#8])',1),  # C(-H)(=O)
    449: ('[#6](-,:[#7])(=,:[#6])',1),  # C(-N)(=C)
    450: ('[#6](-,:[#7])(=,:[#7])',1),  # C(-N)(=N)
    451: ('[#6](-,:[#7])(=,:[#8])',1),  # C(-N)(=O)
    452: ('[#6](-,:[#8])(=,:[#8])',1),  # C(-O)(=O)
    453: ('[#7](-,:[#6])(=,:[#6])',1),  # N(-C)(=C)
    454: ('[#7](-,:[#6])(=,:[#8])',1),  # N(-C)(=O)
    455: ('[#7](-,:[#8])(=,:[#8])',1),  # N(-O)(=O)
    456: ('[#15](-,:[#8])(=,:[#8])',1),  # P(-O)(=O)
    457: ('[#16](-,:[#6])(=,:[#8])',1),  # S(-C)(=O)
    458: ('[#16](-,:[#8])(=,:[#8])',1),  # S(-O)(=O)
    459: ('[#16](=,:[#8])(=,:[#8])',1),  # S(=O)(=O)
    460: ('[#6]-,:[#6]-,:[#6]#C',1),  # C-C-C#C
    461: ('[#8]-,:[#6]-,:[#6]=,:[#7]',1),  # O-C-C=N
    462: ('[#8]-,:[#6]-,:[#6]=,:[#8]',1),  # O-C-C=O
    463: ('n:c-,:[#16;!H0]',1),  # N:C-S-[#1]
    464: ('[#7]-,:[#6]-,:[#6]=,:[#6]',1),  # N-C-C=C
    465: ('[#8]=,:[#16]-,:[#6]-,:[#6]',1),  # O=S-C-C
    466: ('N#[#6]-,:[#6]=,:[#6]',1),  # N#C-C=C
    467: ('[#6]=,:[#7]-,:[#7]-,:[#6]',1),  # C=N-N-C
    468: ('[#8]=,:[#16]-,:[#6]-,:[#7]',1),  # O=S-C-N
    469: ('[#16]-,:[#16]-,:c:c',1),  # S-S-C:C
    470: ('c:c-,:[#6]=,:[#6]',1),  # C:C-C=C
    471: ('s:c:c:c',1),  # S:C:C:C
    472: ('c:n:c-,:[#6]',1),  # C:N:C-C
    473: ('[#16]-,:c:n:c',1),  # S-C:N:C
    474: ('s:c:c:n',1),  # S:C:C:N
    475: ('[#16]-,:[#6]=,:[#7]-,:[#6]',1),  # S-C=N-C
    476: ('[#6]-,:[#8]-,:[#6]=,:[#6]',1),  # C-O-C=C
    477: ('[#7]-,:[#7]-,:c:c',1),  # N-N-C:C
    478: ('[#16]-,:[#6]=,:[#7;!H0]',1),  # S-C=N-[#1]
    479: ('[#16]-,:[#6]-,:[#16]-,:[#6]',1),  # S-C-S-C
    480: ('c:s:c-,:[#6]',1),  # C:S:C-C
    481: ('[#8]-,:[#16]-,:c:c',1),  # O-S-C:C
    482: ('c:n-,:c:c',1),  # C:N-C:C
    483: ('[#7]-,:[#16]-,:c:c',1),  # N-S-C:C
    484: ('[#7]-,:c:n:c',1),  # N-C:N:C
    485: ('n:c:c:n',1),  # N:C:C:N
    486: ('[#7]-,:c:n:n',1),  # N-C:N:N
    487: ('[#7]-,:[#6]=,:[#7]-,:[#6]',1),  # N-C=N-C
    488: ('[#7]-,:[#6]=,:[#7;!H0]',1),  # N-C=N-[#1]
    489: ('[#7]-,:[#6]-,:[#16]-,:[#6]',1),  # N-C-S-C
    490: ('[#6]-,:[#6]-,:[#6]=,:[#6]',1),  # C-C-C=C
    491: ('[#6]-,:n:[c;!H0]',1),  # C-N:C-[#1]
    492: ('[#7]-,:c:o:c',1),  # N-C:O:C
    493: ('[#8]=,:[#6]-,:c:c',1),  # O=C-C:C
    494: ('[#8]=,:[#6]-,:c:n',1),  # O=C-C:N
    495: ('[#6]-,:[#7]-,:c:c',1),  # C-N-C:C
    496: ('n:n-,:[#6;!H0]',1),  # N:N-C-[#1]
    497: ('[#8]-,:c:c:n',1),  # O-C:C:N
    498: ('[#8]-,:[#6]=,:[#6]-,:[#6]',1),  # O-C=C-C
    499: ('[#7]-,:c:c:n',1),  # N-C:C:N
    500: ('[#6]-,:[#16]-,:c:c',1),  # C-S-C:C
    501: ('Cl-,:c:c-,:[#6]',1),  # Cl-C:C-C
    502: ('[#7]-,:[#6]=,:[#6;!H0]',1),  # N-C=C-[#1]
    503: ('Cl-,:c:[c;!H0]',1),  # Cl-C:C-[#1]
    504: ('n:c:n-,:[#6]',1),  # N:C:N-C
    505: ('Cl-,:c:c-,:[#8]',1),  # Cl-C:C-O
    506: ('[#6]-,:c:n:c',1),  # C-C:N:C
    507: ('[#6]-,:[#6]-,:[#16]-,:[#6]',1),  # C-C-S-C
    508: ('[#16]=,:[#6]-,:[#7]-,:[#6]',1),  # S=C-N-C
    509: ('Br-,:c:c-,:[#6]',1),  # Br-C:C-C
    510: ('[#7;!H0]-,:[#7;!H0]',1),  # [#1]-N-N-[#1]
    511: ('[#16]=,:[#6]-,:[#7;!H0]',1),  # S=C-N-[#1]
    512: ('[#6]-,:[#33]-,:[#8;!H0]',1),  # C-[As]-O-[#1]
    513: ('s:c:[c;!H0]',1),  # S:C:C-[#1]
    514: ('[#8]-,:[#7]-,:[#6]-,:[#6]',1),  # O-N-C-C
    515: ('[#7]-,:[#7]-,:[#6]-,:[#6]',1),  # N-N-C-C
    516: ('[#6;!H0]=,:[#6;!H0]',1),  # [#1]-C=C-[#1]
    517: ('[#7]-,:[#7]-,:[#6]-,:[#7]',1),  # N-N-C-N
    518: ('[#8]=,:[#6]-,:[#7]-,:[#7]',1),  # O=C-N-N
    519: ('[#7]=,:[#6]-,:[#7]-,:[#6]',1),  # N=C-N-C
    520: ('[#6]=,:[#6]-,:c:c',1),  # C=C-C:C
    521: ('c:n-,:[#6;!H0]',1),  # C:N-C-[#1]
    522: ('[#6]-,:[#7]-,:[#7;!H0]',1),  # C-N-N-[#1]
    523: ('n:c:c-,:[#6]',1),  # N:C:C-C
    524: ('[#6]-,:[#6]=,:[#6]-,:[#6]',1),  # C-C=C-C
    525: ('[#33]-,:c:[c;!H0]',1),  # [As]-C:C-[#1]
    526: ('Cl-,:c:c-,:Cl',1),  # Cl-C:C-Cl
    527: ('c:c:[n;!H0]',1),  # C:C:N-[#1]
    528: ('[#7;!H0]-,:[#6;!H0]',1),  # [#1]-N-C-[#1]
    529: ('Cl-,:[#6]-,:[#6]-,:Cl',1),  # Cl-C-C-Cl
    530: ('n:c-,:c:c',1),  # N:C-C:C
    531: ('[#16]-,:c:c-,:[#6]',1),  # S-C:C-C
    532: ('[#16]-,:c:[c;!H0]',1),  # S-C:C-[#1]
    533: ('[#16]-,:c:c-,:[#7]',1),  # S-C:C-N
    534: ('[#16]-,:c:c-,:[#8]',1),  # S-C:C-O
    535: ('[#8]=,:[#6]-,:[#6]-,:[#6]',1),  # O=C-C-C
    536: ('[#8]=,:[#6]-,:[#6]-,:[#7]',1),  # O=C-C-N
    537: ('[#8]=,:[#6]-,:[#6]-,:[#8]',1),  # O=C-C-O
    538: ('[#7]=,:[#6]-,:[#6]-,:[#6]',1),  # N=C-C-C
    539: ('[#7]=,:[#6]-,:[#6;!H0]',1),  # N=C-C-[#1]
    540: ('[#6]-,:[#7]-,:[#6;!H0]',1),  # C-N-C-[#1]
    541: ('[#8]-,:c:c-,:[#6]',1),  # O-C:C-C
    542: ('[#8]-,:c:[c;!H0]',1),  # O-C:C-[#1]
    543: ('[#8]-,:c:c-,:[#7]',1),  # O-C:C-N
    544: ('[#8]-,:c:c-,:[#8]',1),  # O-C:C-O
    545: ('[#7]-,:c:c-,:[#6]',1),  # N-C:C-C
    546: ('[#7]-,:c:[c;!H0]',1),  # N-C:C-[#1]
    547: ('[#7]-,:c:c-,:[#7]',1),  # N-C:C-N
    548: ('[#8]-,:[#6]-,:c:c',1),  # O-C-C:C
    549: ('[#7]-,:[#6]-,:c:c',1),  # N-C-C:C
    550: ('Cl-,:[#6]-,:[#6]-,:[#6]',1),  # Cl-C-C-C
    551: ('Cl-,:[#6]-,:[#6]-,:[#8]',1),  # Cl-C-C-O
    552: ('c:c-,:c:c',1),  # C:C-C:C
    553: ('[#8]=,:[#6]-,:[#6]=,:[#6]',1),  # O=C-C=C
    554: ('Br-,:[#6]-,:[#6]-,:[#6]',1),  # Br-C-C-C
    555: ('[#7]=,:[#6]-,:[#6]=,:[#6]',1),  # N=C-C=C
    556: ('[#6]=,:[#6]-,:[#6]-,:[#6]',1),  # C=C-C-C
    557: ('n:c-,:[#8;!H0]',1),  # N:C-O-[#1]
    558: ('[#8]=,:[#7]-,:c:c',1),  # O=N-C:C
    559: ('[#8]-,:[#6]-,:[#7;!H0]',1),  # O-C-N-[#1]
    560: ('[#7]-,:[#6]-,:[#7]-,:[#6]',1),  # N-C-N-C
    561: ('Cl-,:[#6]-,:[#6]=,:[#8]',1),  # Cl-C-C=O
    562: ('Br-,:[#6]-,:[#6]=,:[#8]',1),  # Br-C-C=O
    563: ('[#8]-,:[#6]-,:[#8]-,:[#6]',1),  # O-C-O-C
    564: ('[#6]=,:[#6]-,:[#6]=,:[#6]',1),  # C=C-C=C
    565: ('c:c-,:[#8]-,:[#6]',1),  # C:C-O-C
    566: ('[#8]-,:[#6]-,:[#6]-,:[#7]',1),  # O-C-C-N
    567: ('[#8]-,:[#6]-,:[#6]-,:[#8]',1),  # O-C-C-O
    568: ('N#[#6]-,:[#6]-,:[#6]',1),  # N#C-C-C
    569: ('[#7]-,:[#6]-,:[#6]-,:[#7]',1),  # N-C-C-N
    570: ('c:c-,:[#6]-,:[#6]',1),  # C:C-C-C
    571: ('[#6;!H0]-,:[#8;!H0]',1),  # [#1]-C-O-[#1]
    572: ('n:c:n:c',1),  # N:C:N:C
    573: ('[#8]-,:[#6]-,:[#6]=,:[#6]',1),  # O-C-C=C
    574: ('[#8]-,:[#6]-,:c:c-,:[#6]',1),  # O-C-C:C-C
    575: ('[#8]-,:[#6]-,:c:c-,:[#8]',1),  # O-C-C:C-O
    576: ('[#7]=,:[#6]-,:c:[c;!H0]',1),  # N=C-C:C-[#1]
    577: ('c:c-,:[#7]-,:c:c',1),  # C:C-N-C:C
    578: ('[#6]-,:c:c-,:c:c',1),  # C-C:C-C:C
    579: ('[#8]=,:[#6]-,:[#6]-,:[#6]-,:[#6]',1),  # O=C-C-C-C
    580: ('[#8]=,:[#6]-,:[#6]-,:[#6]-,:[#7]',1),  # O=C-C-C-N
    581: ('[#8]=,:[#6]-,:[#6]-,:[#6]-,:[#8]',1),  # O=C-C-C-O
    582: ('[#6]-,:[#6]-,:[#6]-,:[#6]-,:[#6]',1),  # C-C-C-C-C
    583: ('Cl-,:c:c-,:[#8]-,:[#6]',1),  # Cl-C:C-O-C
    584: ('c:c-,:[#6]=,:[#6]-,:[#6]',1),  # C:C-C=C-C
    585: ('[#6]-,:c:c-,:[#7]-,:[#6]',1),  # C-C:C-N-C
    586: ('[#6]-,:[#16]-,:[#6]-,:[#6]-,:[#6]',1),  # C-S-C-C-C
    587: ('[#7]-,:c:c-,:[#8;!H0]',1),  # N-C:C-O-[#1]
    588: ('[#8]=,:[#6]-,:[#6]-,:[#6]=,:[#8]',1),  # O=C-C-C=O
    589: ('[#6]-,:c:c-,:[#8]-,:[#6]',1),  # C-C:C-O-C
    590: ('[#6]-,:c:c-,:[#8;!H0]',1),  # C-C:C-O-[#1]
    591: ('Cl-,:[#6]-,:[#6]-,:[#6]-,:[#6]',1),  # Cl-C-C-C-C
    592: ('[#7]-,:[#6]-,:[#6]-,:[#6]-,:[#6]',1),  # N-C-C-C-C
    593: ('[#7]-,:[#6]-,:[#6]-,:[#6]-,:[#7]',1),  # N-C-C-C-N
    594: ('[#6]-,:[#8]-,:[#6]-,:[#6]=,:[#6]',1),  # C-O-C-C=C
    595: ('c:c-,:[#6]-,:[#6]-,:[#6]',1),  # C:C-C-C-C
    596: ('[#7]=,:[#6]-,:[#7]-,:[#6]-,:[#6]',1),  # N=C-N-C-C
    597: ('[#8]=,:[#6]-,:[#6]-,:c:c',1),  # O=C-C-C:C
    598: ('Cl-,:c:c:c-,:[#6]',1),  # Cl-C:C:C-C
    599: ('[#6;!H0]-,:[#6]=,:[#6;!H0]',1),  # [#1]-C-C=C-[#1]
    600: ('[#7]-,:c:c:c-,:[#6]',1),  # N-C:C:C-C
    601: ('[#7]-,:c:c:c-,:[#7]',1),  # N-C:C:C-N
    602: ('[#8]=,:[#6]-,:[#6]-,:[#7]-,:[#6]',1),  # O=C-C-N-C
    603: ('[#6]-,:c:c:c-,:[#6]',1),  # C-C:C:C-C
    604: ('[#6]-,:[#8]-,:[#6]-,:c:c',1),  # C-O-C-C:C
    605: ('[#8]=,:[#6]-,:[#6]-,:[#8]-,:[#6]',1),  # O=C-C-O-C
    606: ('[#8]-,:c:c-,:[#6]-,:[#6]',1),  # O-C:C-C-C
    607: ('[#7]-,:[#6]-,:[#6]-,:c:c',1),  # N-C-C-C:C
    608: ('[#6]-,:[#6]-,:[#6]-,:c:c',1),  # C-C-C-C:C
    609: ('Cl-,:[#6]-,:[#6]-,:[#7]-,:[#6]',1),  # Cl-C-C-N-C
    610: ('[#6]-,:[#8]-,:[#6]-,:[#8]-,:[#6]',1),  # C-O-C-O-C
    611: ('[#7]-,:[#6]-,:[#6]-,:[#7]-,:[#6]',1),  # N-C-C-N-C
    612: ('[#7]-,:[#6]-,:[#8]-,:[#6]-,:[#6]',1),  # N-C-O-C-C
    613: ('[#6]-,:[#7]-,:[#6]-,:[#6]-,:[#6]',1),  # C-N-C-C-C
    614: ('[#6]-,:[#6]-,:[#8]-,:[#6]-,:[#6]',1),  # C-C-O-C-C
    615: ('[#7]-,:[#6]-,:[#6]-,:[#8]-,:[#6]',1),  # N-C-C-O-C
    616: ('c:c:n:n:c',1),  # C:C:N:N:C
    617: ('[#6]-,:[#6]-,:[#6]-,:[#8;!H0]',1),  # C-C-C-O-[#1]
    618: ('c:c-,:[#6]-,:c:c',1),  # C:C-C-C:C
    619: ('[#8]-,:[#6]-,:[#6]=,:[#6]-,:[#6]',1),  # O-C-C=C-C
    620: ('c:c-,:[#8]-,:[#6]-,:[#6]',1),  # C:C-O-C-C
    621: ('[#7]-,:c:c:c:n',1),  # N-C:C:C:N
    622: ('[#8]=,:[#6]-,:[#8]-,:c:c',1),  # O=C-O-C:C
    623: ('[#8]=,:[#6]-,:c:c-,:[#6]',1),  # O=C-C:C-C
    624: ('[#8]=,:[#6]-,:c:c-,:[#7]',1),  # O=C-C:C-N
    625: ('[#8]=,:[#6]-,:c:c-,:[#8]',1),  # O=C-C:C-O
    626: ('[#6]-,:[#8]-,:c:c-,:[#6]',1),  # C-O-C:C-C
    627: ('[#8]=,:[#33]-,:c:c:c',1),  # O=[As]-C:C:C
    628: ('[#6]-,:[#7]-,:[#6]-,:c:c',1),  # C-N-C-C:C
    629: ('[#16]-,:c:c:c-,:[#7]',1),  # S-C:C:C-N
    630: ('[#8]-,:c:c-,:[#8]-,:[#6]',1),  # O-C:C-O-C
    631: ('[#8]-,:c:c-,:[#8;!H0]',1),  # O-C:C-O-[#1]
    632: ('[#6]-,:[#6]-,:[#8]-,:c:c',1),  # C-C-O-C:C
    633: ('[#7]-,:[#6]-,:c:c-,:[#6]',1),  # N-C-C:C-C
    634: ('[#6]-,:[#6]-,:c:c-,:[#6]',1),  # C-C-C:C-C
    635: ('[#7]-,:[#7]-,:[#6]-,:[#7;!H0]',1),  # N-N-C-N-[#1]
    636: ('[#6]-,:[#7]-,:[#6]-,:[#7]-,:[#6]',1),  # C-N-C-N-C
    637: ('[#8]-,:[#6]-,:[#6]-,:[#6]-,:[#6]',1),  # O-C-C-C-C
    638: ('[#8]-,:[#6]-,:[#6]-,:[#6]-,:[#7]',1),  # O-C-C-C-N
    639: ('[#8]-,:[#6]-,:[#6]-,:[#6]-,:[#8]',1),  # O-C-C-C-O
    640: ('[#6]=,:[#6]-,:[#6]-,:[#6]-,:[#6]',1),  # C=C-C-C-C
    641: ('[#8]-,:[#6]-,:[#6]-,:[#6]=,:[#6]',1),  # O-C-C-C=C
    642: ('[#8]-,:[#6]-,:[#6]-,:[#6]=,:[#8]',1),  # O-C-C-C=O
    643: ('[#6;!H0]-,:[#6]-,:[#7;!H0]',1),  # [#1]-C-C-N-[#1]
    644: ('[#6]-,:[#6]=,:[#7]-,:[#7]-,:[#6]',1),  # C-C=N-N-C
    645: ('[#8]=,:[#6]-,:[#7]-,:[#6]-,:[#6]',1),  # O=C-N-C-C
    646: ('[#8]=,:[#6]-,:[#7]-,:[#6;!H0]',1),  # O=C-N-C-[#1]
    647: ('[#8]=,:[#6]-,:[#7]-,:[#6]-,:[#7]',1),  # O=C-N-C-N
    648: ('[#8]=,:[#7]-,:c:c-,:[#7]',1),  # O=N-C:C-N
    649: ('[#8]=,:[#7]-,:c:c-,:[#8]',1),  # O=N-C:C-O
    650: ('[#8]=,:[#6]-,:[#7]-,:[#6]=,:[#8]',1),  # O=C-N-C=O
    651: ('[#8]-,:c:c:c-,:[#6]',1),  # O-C:C:C-C
    652: ('[#8]-,:c:c:c-,:[#7]',1),  # O-C:C:C-N
    653: ('[#8]-,:c:c:c-,:[#8]',1),  # O-C:C:C-O
    654: ('[#7]-,:[#6]-,:[#7]-,:[#6]-,:[#6]',1),  # N-C-N-C-C
    655: ('[#8]-,:[#6]-,:[#6]-,:c:c',1),  # O-C-C-C:C
    656: ('[#6]-,:[#6]-,:[#7]-,:[#6]-,:[#6]',1),  # C-C-N-C-C
    657: ('[#6]-,:[#7]-,:c:c-,:[#6]',1),  # C-N-C:C-C
    658: ('[#6]-,:[#6]-,:[#16]-,:[#6]-,:[#6]',1),  # C-C-S-C-C
    659: ('[#8]-,:[#6]-,:[#6]-,:[#7]-,:[#6]',1),  # O-C-C-N-C
    660: ('[#6]-,:[#6]=,:[#6]-,:[#6]-,:[#6]',1),  # C-C=C-C-C
    661: ('[#8]-,:[#6]-,:[#8]-,:[#6]-,:[#6]',1),  # O-C-O-C-C
    662: ('[#8]-,:[#6]-,:[#6]-,:[#8]-,:[#6]',1),  # O-C-C-O-C
    663: ('[#8]-,:[#6]-,:[#6]-,:[#8;!H0]',1),  # O-C-C-O-[#1]
    664: ('[#6]-,:[#6]=,:[#6]-,:[#6]=,:[#6]',1),  # C-C=C-C=C
    665: ('[#7]-,:c:c-,:[#6]-,:[#6]',1),  # N-C:C-C-C
    666: ('[#6]=,:[#6]-,:[#6]-,:[#8]-,:[#6]',1),  # C=C-C-O-C
    667: ('[#6]=,:[#6]-,:[#6]-,:[#8;!H0]',1),  # C=C-C-O-[#1]
    668: ('[#6]-,:c:c-,:[#6]-,:[#6]',1),  # C-C:C-C-C
    669: ('Cl-,:c:c-,:[#6]=,:[#8]',1),  # Cl-C:C-C=O
    670: ('Br-,:c:c:c-,:[#6]',1),  # Br-C:C:C-C
    671: ('[#8]=,:[#6]-,:[#6]=,:[#6]-,:[#6]',1),  # O=C-C=C-C
    672: ('[#8]=,:[#6]-,:[#6]=,:[#6;!H0]',1),  # O=C-C=C-[#1]
    673: ('[#8]=,:[#6]-,:[#6]=,:[#6]-,:[#7]',1),  # O=C-C=C-N
    674: ('[#7]-,:[#6]-,:[#7]-,:c:c',1),  # N-C-N-C:C
    675: ('Br-,:[#6]-,:[#6]-,:c:c',1),  # Br-C-C-C:C
    676: ('N#[#6]-,:[#6]-,:[#6]-,:[#6]',1),  # N#C-C-C-C
    677: ('[#6]-,:[#6]=,:[#6]-,:c:c',1),  # C-C=C-C:C
    678: ('[#6]-,:[#6]-,:[#6]=,:[#6]-,:[#6]',1),  # C-C-C=C-C
    679: ('[#6]-,:[#6]-,:[#6]-,:[#6]-,:[#6]-,:[#6]',1),  # C-C-C-C-C-C
    680: ('[#8]-,:[#6]-,:[#6]-,:[#6]-,:[#6]-,:[#6]',1),  # O-C-C-C-C-C
    681: ('[#8]-,:[#6]-,:[#6]-,:[#6]-,:[#6]-,:[#8]',1),  # O-C-C-C-C-O
    682: ('[#8]-,:[#6]-,:[#6]-,:[#6]-,:[#6]-,:[#7]',1),  # O-C-C-C-C-N
    683: ('[#7]-,:[#6]-,:[#6]-,:[#6]-,:[#6]-,:[#6]',1),  # N-C-C-C-C-C
    684: ('[#8]=,:[#6]-,:[#6]-,:[#6]-,:[#6]-,:[#6]',1),  # O=C-C-C-C-C
    685: ('[#8]=,:[#6]-,:[#6]-,:[#6]-,:[#6]-,:[#7]',1),  # O=C-C-C-C-N
    686: ('[#8]=,:[#6]-,:[#6]-,:[#6]-,:[#6]-,:[#8]',1),  # O=C-C-C-C-O
    687: ('[#8]=,:[#6]-,:[#6]-,:[#6]-,:[#6]=,:[#8]',1),  # O=C-C-C-C=O
    688: ('[#6]-,:[#6]-,:[#6]-,:[#6]-,:[#6]-,:[#6]-,:[#6]',1),  # C-C-C-C-C-C-C
    689: ('[#8]-,:[#6]-,:[#6]-,:[#6]-,:[#6]-,:[#6]-,:[#6]',1),  # O-C-C-C-C-C-C
    690: ('[#8]-,:[#6]-,:[#6]-,:[#6]-,:[#6]-,:[#6]-,:[#8]',1),  # O-C-C-C-C-C-O
    691: ('[#8]-,:[#6]-,:[#6]-,:[#6]-,:[#6]-,:[#6]-,:[#7]',1),  # O-C-C-C-C-C-N
    692: ('[#8]=,:[#6]-,:[#6]-,:[#6]-,:[#6]-,:[#6]-,:[#6]',1),  # O=C-C-C-C-C-C
    693: ('[#8]=,:[#6]-,:[#6]-,:[#6]-,:[#6]-,:[#6]-,:[#8]',1),  # O=C-C-C-C-C-O
    694: ('[#8]=,:[#6]-,:[#6]-,:[#6]-,:[#6]-,:[#6]=,:[#8]',1),  # O=C-C-C-C-C=O
    695: ('[#8]=,:[#6]-,:[#6]-,:[#6]-,:[#6]-,:[#6]-,:[#7]',1),  # O=C-C-C-C-C-N
    696: ('[#6]-,:[#6]-,:[#6]-,:[#6]-,:[#6]-,:[#6]-,:[#6]-,:[#6]',1),  # C-C-C-C-C-C-C-C
    697: ('[#6]-,:[#6]-,:[#6]-,:[#6]-,:[#6]-,:[#6](-,:[#6])-,:[#6]',1),  # C-C-C-C-C-C(C)-C
    698: ('[#8]-,:[#6]-,:[#6]-,:[#6]-,:[#6]-,:[#6]-,:[#6]-,:[#6]',1),  # O-C-C-C-C-C-C-C
    699: ('[#8]-,:[#6]-,:[#6]-,:[#6]-,:[#6]-,:[#6](-,:[#6])-,:[#6]',1),  # O-C-C-C-C-C(C)-C
    700: ('[#8]-,:[#6]-,:[#6]-,:[#6]-,:[#6]-,:[#6]-,:[#8]-,:[#6]',1),  # O-C-C-C-C-C-O-C
    701: ('[#8]-,:[#6]-,:[#6]-,:[#6]-,:[#6]-,:[#6](-,:[#8])-,:[#6]',1),  # O-C-C-C-C-C(O)-C
    702: ('[#8]-,:[#6]-,:[#6]-,:[#6]-,:[#6]-,:[#6]-,:[#7]-,:[#6]',1),  # O-C-C-C-C-C-N-C
    703: ('[#8]-,:[#6]-,:[#6]-,:[#6]-,:[#6]-,:[#6](-,:[#7])-,:[#6]',1),  # O-C-C-C-C-C(N)-C
    704: ('[#8]=,:[#6]-,:[#6]-,:[#6]-,:[#6]-,:[#6]-,:[#6]-,:[#6]',1),  # O=C-C-C-C-C-C-C
    705: ('[#8]=,:[#6]-,:[#6]-,:[#6]-,:[#6]-,:[#6](-,:[#8])-,:[#6]',1),  # O=C-C-C-C-C(O)-C
    706: ('[#8]=,:[#6]-,:[#6]-,:[#6]-,:[#6]-,:[#6](=,:[#8])-,:[#6]',1),  # O=C-C-C-C-C(=O)-C
    707: ('[#8]=,:[#6]-,:[#6]-,:[#6]-,:[#6]-,:[#6](-,:[#7])-,:[#6]',1),  # O=C-C-C-C-C(N)-C
    708: ('[#6]-,:[#6](-,:[#6])-,:[#6]-,:[#6]',1),  # C-C(C)-C-C
    709: ('[#6]-,:[#6](-,:[#6])-,:[#6]-,:[#6]-,:[#6]',1),  # C-C(C)-C-C-C
    710: ('[#6]-,:[#6]-,:[#6](-,:[#6])-,:[#6]-,:[#6]',1),  # C-C-C(C)-C-C
    711: ('[#6]-,:[#6](-,:[#6])(-,:[#6])-,:[#6]-,:[#6]',1),  # C-C(C)(C)-C-C
    712: ('[#6]-,:[#6](-,:[#6])-,:[#6](-,:[#6])-,:[#6]',1),  # 
    713: ('[#6]c1ccc([#6])cc1',1),  # Cc1ccc(C)cc1
    714: ('[#6]c1ccc([#8])cc1',1),  # Cc1ccc(O)cc1
    715: ('[#6]c1ccc([#16])cc1',1),  # Cc1ccc(S)cc1
    716: ('[#6]c1ccc([#7])cc1',1),  # Cc1ccc(N)cc1
    717: ('[#6]c1ccc(Cl)cc1',1),  # Cc1ccc(Cl)cc1
    718: ('[#6]c1ccc(Br)cc1',1),  # Cc1ccc(Br)cc1
    719: ('[#8]c1ccc([#8])cc1',1),  # Oc1ccc(O)cc1
    720: ('[#8]c1ccc([#16])cc1',1),  # Oc1ccc(S)cc1
    721: ('[#8]c1ccc([#7])cc1',1),  # Oc1ccc(N)cc1
    722: ('[#8]c1ccc(Cl)cc1',1),  # Oc1ccc(Cl)cc1
    723: ('[#8]c1ccc(Br)cc1',1),  # Oc1ccc(Br)cc1
    724: ('[#16]c1ccc([#16])cc1',1),  # Sc1ccc(S)cc1
    725: ('[#16]c1ccc([#7])cc1',1),  # Sc1ccc(N)cc1
    726: ('[#16]c1ccc(Cl)cc1',1),  # Sc1ccc(Cl)cc1
    727: ('[#16]c1ccc(Br)cc1',1),  # Sc1ccc(Br)cc1
    728: ('[#7]c1ccc([#7])cc1',1),  # Nc1ccc(N)cc1
    729: ('[#7]c1ccc(Cl)cc1',1),  # Nc1ccc(Cl)cc1
    730: ('[#7]c1ccc(Br)cc1',1),  # Nc1ccc(Br)cc1
    731: ('Clc1ccc(Cl)cc1',1),  # Clc1ccc(Cl)cc1
    732: ('Clc1ccc(Br)cc1',1),  # Clc1ccc(Br)cc1
    733: ('Brc1ccc(Br)cc1',1),  # Brc1ccc(Br)cc1
    734: ('[#6]c1cc([#6])ccc1',1),  # Cc1cc(C)ccc1
    735: ('[#6]c1cc([#8])ccc1',1),  # Cc1cc(O)ccc1
    736: ('[#6]c1cc([#16])ccc1',1),  # Cc1cc(S)ccc1
    737: ('[#6]c1cc([#7])ccc1',1),  # Cc1cc(N)ccc1
    738: ('[#6]c1cc(Cl)ccc1',1),  # Cc1cc(Cl)ccc1
    739: ('[#6]c1cc(Br)ccc1',1),  # Cc1cc(Br)ccc1
    740: ('[#8]c1cc([#8])ccc1',1),  # Oc1cc(O)ccc1
    741: ('[#8]c1cc([#16])ccc1',1),  # Oc1cc(S)ccc1
    742: ('[#8]c1cc([#7])ccc1',1),  # Oc1cc(N)ccc1
    743: ('[#8]c1cc(Cl)ccc1',1),  # Oc1cc(Cl)ccc1
    744: ('[#8]c1cc(Br)ccc1',1),  # Oc1cc(Br)ccc1
    745: ('[#16]c1cc([#16])ccc1',1),  # Sc1cc(S)ccc1
    746: ('[#16]c1cc([#7])ccc1',1),  # Sc1cc(N)ccc1
    747: ('[#16]c1cc(Cl)ccc1',1),  # Sc1cc(Cl)ccc1
    748: ('[#16]c1cc(Br)ccc1',1),  # Sc1cc(Br)ccc1
    749: ('[#7]c1cc([#7])ccc1',1),  # Nc1cc(N)ccc1
    750: ('[#7]c1cc(Cl)ccc1',1),  # Nc1cc(Cl)ccc1
    751: ('[#7]c1cc(Br)ccc1',1),  # Nc1cc(Br)ccc1
    752: ('Clc1cc(Cl)ccc1',1),  # Clc1cc(Cl)ccc1
    753: ('Clc1cc(Br)ccc1',1),  # Clc1cc(Br)ccc1
    754: ('Brc1cc(Br)ccc1',1),  # Brc1cc(Br)ccc1
    755: ('[#6]c1c([#6])cccc1',1),  # Cc1c(C)cccc1
    756: ('[#6]c1c([#8])cccc1',1),  # Cc1c(O)cccc1
    757: ('[#6]c1c([#16])cccc1',1),  # Cc1c(S)cccc1
    758: ('[#6]c1c([#7])cccc1',1),  # Cc1c(N)cccc1
    759: ('[#6]c1c(Cl)cccc1',1),  # Cc1c(Cl)cccc1
    760: ('[#6]c1c(Br)cccc1',1),  # Cc1c(Br)cccc1
    761: ('[#8]c1c([#8])cccc1',1),  # Oc1c(O)cccc1
    762: ('[#8]c1c([#16])cccc1',1),  # Oc1c(S)cccc1
    763: ('[#8]c1c([#7])cccc1',1),  # Oc1c(N)cccc1
    764: ('[#8]c1c(Cl)cccc1',1),  # Oc1c(Cl)cccc1
    765: ('[#8]c1c(Br)cccc1',1),  # Oc1c(Br)cccc1
    766: ('[#16]c1c([#16])cccc1',1),  # Sc1c(S)cccc1
    767: ('[#16]c1c([#7])cccc1',1),  # Sc1c(N)cccc1
    768: ('[#16]c1c(Cl)cccc1',1),  # Sc1c(Cl)cccc1
    769: ('[#16]c1c(Br)cccc1',1),  # Sc1c(Br)cccc1
    770: ('[#7]c1c([#7])cccc1',1),  # Nc1c(N)cccc1
    771: ('[#7]c1c(Cl)cccc1',1),  # Nc1c(Cl)cccc1
    772: ('[#7]c1c(Br)cccc1',1),  # Nc1c(Br)cccc1
    773: ('Clc1c(Cl)cccc1',1),  # Clc1c(Cl)cccc1
    774: ('Clc1c(Br)cccc1',1),  # Clc1c(Br)cccc1
    775: ('Brc1c(Br)cccc1',1),  # Brc1c(Br)cccc1
    776: ('[#6][#6]1[#6][#6][#6]([#6])[#6][#6]1',1),  # CC1CCC(C)CC1
    777: ('[#6][#6]1[#6][#6][#6]([#8])[#6][#6]1',1),  # CC1CCC(O)CC1
    778: ('[#6][#6]1[#6][#6][#6]([#16])[#6][#6]1',1),  # CC1CCC(S)CC1
    779: ('[#6][#6]1[#6][#6][#6]([#7])[#6][#6]1',1),  # CC1CCC(N)CC1
    780: ('[#6][#6]1[#6][#6][#6](Cl)[#6][#6]1',1),  # CC1CCC(Cl)CC1
    781: ('[#6][#6]1[#6][#6][#6](Br)[#6][#6]1',1),  # CC1CCC(Br)CC1
    782: ('[#8][#6]1[#6][#6][#6]([#8])[#6][#6]1',1),  # OC1CCC(O)CC1
    783: ('[#8][#6]1[#6][#6][#6]([#16])[#6][#6]1',1),  # OC1CCC(S)CC1
    784: ('[#8][#6]1[#6][#6][#6]([#7])[#6][#6]1',1),  # OC1CCC(N)CC1
    785: ('[#8][#6]1[#6][#6][#6](Cl)[#6][#6]1',1),  # OC1CCC(Cl)CC1
    786: ('[#8][#6]1[#6][#6][#6](Br)[#6][#6]1',1),  # OC1CCC(Br)CC1
    787: ('[#16][#6]1[#6][#6][#6]([#16])[#6][#6]1',1),  # SC1CCC(S)CC1
    788: ('[#16][#6]1[#6][#6][#6]([#7])[#6][#6]1',1),  # SC1CCC(N)CC1
    789: ('[#16][#6]1[#6][#6][#6](Cl)[#6][#6]1',1),  # SC1CCC(Cl)CC1
    790: ('[#16][#6]1[#6][#6][#6](Br)[#6][#6]1',1),  # SC1CCC(Br)CC1
    791: ('[#7][#6]1[#6][#6][#6]([#7])[#6][#6]1',1),  # NC1CCC(N)CC1
    792: ('[#7][#6]1[#6][#6][#6](Cl)[#6][#6]1',1),  # NC1CCC(Cl)CC1
    793: ('[#7][#6]1[#6][#6][#6](Br)[#6][#6]1',1),  # NC1CCC(Br)CC1
    794: ('Cl[#6]1[#6][#6][#6](Cl)[#6][#6]1',1),  # ClC1CCC(Cl)CC1
    795: ('Cl[#6]1[#6][#6][#6](Br)[#6][#6]1',1),  # ClC1CCC(Br)CC1
    796: ('Br[#6]1[#6][#6][#6](Br)[#6][#6]1',1),  # BrC1CCC(Br)CC1
    797: ('[#6][#6]1[#6][#6]([#6])[#6][#6][#6]1',1),  # CC1CC(C)CCC1
    798: ('[#6][#6]1[#6][#6]([#8])[#6][#6][#6]1',1),  # CC1CC(O)CCC1
    799: ('[#6][#6]1[#6][#6]([#16])[#6][#6][#6]1',1),  # CC1CC(S)CCC1
    800: ('[#6][#6]1[#6][#6]([#7])[#6][#6][#6]1',1),  # CC1CC(N)CCC1
    801: ('[#6][#6]1[#6][#6](Cl)[#6][#6][#6]1',1),  # CC1CC(Cl)CCC1
    802: ('[#6][#6]1[#6][#6](Br)[#6][#6][#6]1',1),  # CC1CC(Br)CCC1
    803: ('[#8][#6]1[#6][#6]([#8])[#6][#6][#6]1',1),  # OC1CC(O)CCC1
    804: ('[#8][#6]1[#6][#6]([#16])[#6][#6][#6]1',1),  # OC1CC(S)CCC1
    805: ('[#8][#6]1[#6][#6]([#7])[#6][#6][#6]1',1),  # OC1CC(N)CCC1
    806: ('[#8][#6]1[#6][#6](Cl)[#6][#6][#6]1',1),  # OC1CC(Cl)CCC1
    807: ('[#8][#6]1[#6][#6](Br)[#6][#6][#6]1',1),  # OC1CC(Br)CCC1
    808: ('[#16][#6]1[#6][#6]([#16])[#6][#6][#6]1',1),  # SC1CC(S)CCC1
    809: ('[#16][#6]1[#6][#6]([#7])[#6][#6][#6]1',1),  # SC1CC(N)CCC1
    810: ('[#16][#6]1[#6][#6](Cl)[#6][#6][#6]1',1),  # SC1CC(Cl)CCC1
    811: ('[#16][#6]1[#6][#6](Br)[#6][#6][#6]1',1),  # SC1CC(Br)CCC1
    812: ('[#7][#6]1[#6][#6]([#7])[#6][#6][#6]1',1),  # NC1CC(N)CCC1
    813: ('[#7][#6]1[#6][#6](Cl)[#6][#6][#6]1',1),  # NC1CC(Cl)CCC1
    814: ('[#7][#6]1[#6][#6](Br)[#6][#6][#6]1',1),  # NC1CC(Br)CCC1
    815: ('Cl[#6]1[#6][#6](Cl)[#6][#6][#6]1',1),  # ClC1CC(Cl)CCC1
    816: ('Cl[#6]1[#6][#6](Br)[#6][#6][#6]1',1),  # ClC1CC(Br)CCC1
    817: ('Br[#6]1[#6][#6](Br)[#6][#6][#6]1',1),  # BrC1CC(Br)CCC1
    818: ('[#6][#6]1[#6]([#6])[#6][#6][#6][#6]1',1),  # CC1C(C)CCCC1
    819: ('[#6][#6]1[#6]([#8])[#6][#6][#6][#6]1',1),  # CC1C(O)CCCC1
    820: ('[#6][#6]1[#6]([#16])[#6][#6][#6][#6]1',1),  # CC1C(S)CCCC1
    821: ('[#6][#6]1[#6]([#7])[#6][#6][#6][#6]1',1),  # CC1C(N)CCCC1
    822: ('[#6][#6]1[#6](Cl)[#6][#6][#6][#6]1',1),  # CC1C(Cl)CCCC1
    823: ('[#6][#6]1[#6](Br)[#6][#6][#6][#6]1',1),  # CC1C(Br)CCCC1
    824: ('[#8][#6]1[#6]([#8])[#6][#6][#6][#6]1',1),  # OC1C(O)CCCC1
    825: ('[#8][#6]1[#6]([#16])[#6][#6][#6][#6]1',1),  # OC1C(S)CCCC1
    826: ('[#8][#6]1[#6]([#7])[#6][#6][#6][#6]1',1),  # OC1C(N)CCCC1
    827: ('[#8][#6]1[#6](Cl)[#6][#6][#6][#6]1',1),  # OC1C(Cl)CCCC1
    828: ('[#8][#6]1[#6](Br)[#6][#6][#6][#6]1',1),  # OC1C(Br)CCCC1
    829: ('[#16][#6]1[#6]([#16])[#6][#6][#6][#6]1',1),  # SC1C(S)CCCC1
    830: ('[#16][#6]1[#6]([#7])[#6][#6][#6][#6]1',1),  # SC1C(N)CCCC1
    831: ('[#16][#6]1[#6](Cl)[#6][#6][#6][#6]1',1),  # SC1C(Cl)CCCC1
    832: ('[#16][#6]1[#6](Br)[#6][#6][#6][#6]1',1),  # SC1C(Br)CCCC1
    833: ('[#7][#6]1[#6]([#7])[#6][#6][#6][#6]1',1),  # NC1C(N)CCCC1
    834: ('[#7][#6]1[#6](Cl)[#6][#6][#6][#6]1',1),  # NC1C(Cl)CCCC1
    835: ('[#7][#6]1[#6](Br)[#6][#6][#6][#6]1',1),  # NC1C(Br)CCCC1
    836: ('Cl[#6]1[#6](Cl)[#6][#6][#6][#6]1',1),  # ClC1C(Cl)CCCC1
    837: ('Cl[#6]1[#6](Br)[#6][#6][#6][#6]1',1),  # ClC1C(Br)CCCC1
    838: ('Br[#6]1[#6](Br)[#6][#6][#6][#6]1',1),  # BrC1C(Br)CCCC1
    839: ('[#6][#6]1[#6][#6]([#6])[#6][#6]1',1),  # CC1CC(C)CC1
    840: ('[#6][#6]1[#6][#6]([#8])[#6][#6]1',1),  # CC1CC(O)CC1
    841: ('[#6][#6]1[#6][#6]([#16])[#6][#6]1',1),  # CC1CC(S)CC1
    842: ('[#6][#6]1[#6][#6]([#7])[#6][#6]1',1),  # CC1CC(N)CC1
    843: ('[#6][#6]1[#6][#6](Cl)[#6][#6]1',1),  # CC1CC(Cl)CC1
    844: ('[#6][#6]1[#6][#6](Br)[#6][#6]1',1),  # CC1CC(Br)CC1
    845: ('[#8][#6]1[#6][#6]([#8])[#6][#6]1',1),  # OC1CC(O)CC1
    846: ('[#8][#6]1[#6][#6]([#16])[#6][#6]1',1),  # OC1CC(S)CC1
    847: ('[#8][#6]1[#6][#6]([#7])[#6][#6]1',1),  # OC1CC(N)CC1
    848: ('[#8][#6]1[#6][#6](Cl)[#6][#6]1',1),  # OC1CC(Cl)CC1
    849: ('[#8][#6]1[#6][#6](Br)[#6][#6]1',1),  # OC1CC(Br)CC1
    850: ('[#16][#6]1[#6][#6]([#16])[#6][#6]1',1),  # SC1CC(S)CC1
    851: ('[#16][#6]1[#6][#6]([#7])[#6][#6]1',1),  # SC1CC(N)CC1
    852: ('[#16][#6]1[#6][#6](Cl)[#6][#6]1',1),  # SC1CC(Cl)CC1
    853: ('[#16][#6]1[#6][#6](Br)[#6][#6]1',1),  # SC1CC(Br)CC1
    854: ('[#7][#6]1[#6][#6]([#7])[#6][#6]1',1),  # NC1CC(N)CC1
    855: ('[#7][#6]1[#6][#6](Cl)[#6][#6]1',1),  # NC1CC(Cl)CC1
    856: ('[#7][#6]1[#6][#6](Br)[#6][#6]1',1),  # NC1CC(Br)CC1
    857: ('Cl[#6]1[#6][#6](Cl)[#6][#6]1',1),  # ClC1CC(Cl)CC1
    858: ('Cl[#6]1[#6][#6](Br)[#6][#6]1',1),  # ClC1CC(Br)CC1
    859: ('Br[#6]1[#6][#6](Br)[#6][#6]1',1),  # BrC1CC(Br)CC1
    860: ('[#6][#6]1[#6]([#6])[#6][#6][#6]1',1),  # CC1C(C)CCC1
    861: ('[#6][#6]1[#6]([#8])[#6][#6][#6]1',1),  # CC1C(O)CCC1
    862: ('[#6][#6]1[#6]([#16])[#6][#6][#6]1',1),  # CC1C(S)CCC1
    863: ('[#6][#6]1[#6]([#7])[#6][#6][#6]1',1),  # CC1C(N)CCC1
    864: ('[#6][#6]1[#6](Cl)[#6][#6][#6]1',1),  # CC1C(Cl)CCC1
    865: ('[#6][#6]1[#6](Br)[#6][#6][#6]1',1),  # CC1C(Br)CCC1
    866: ('[#8][#6]1[#6]([#8])[#6][#6][#6]1',1),  # OC1C(O)CCC1
    867: ('[#8][#6]1[#6]([#16])[#6][#6][#6]1',1),  # OC1C(S)CCC1
    868: ('[#8][#6]1[#6]([#7])[#6][#6][#6]1',1),  # OC1C(N)CCC1
    869: ('[#8][#6]1[#6](Cl)[#6][#6][#6]1',1),  # OC1C(Cl)CCC1
    870: ('[#8][#6]1[#6](Br)[#6][#6][#6]1',1),  # OC1C(Br)CCC1
    871: ('[#16][#6]1[#6]([#16])[#6][#6][#6]1',1),  # SC1C(S)CCC1
    872: ('[#16][#6]1[#6]([#7])[#6][#6][#6]1',1),  # SC1C(N)CCC1
    873: ('[#16][#6]1[#6](Cl)[#6][#6][#6]1',1),  # SC1C(Cl)CCC1
    874: ('[#16][#6]1[#6](Br)[#6][#6][#6]1',1),  # SC1C(Br)CCC1
    875: ('[#7][#6]1[#6]([#7])[#6][#6][#6]1',1),  # NC1C(N)CCC1
    876: ('[#7][#6]1[#6](Cl)[#6][#6]1',1),  # NC1C(Cl)CC1
    877: ('[#7][#6]1[#6](Br)[#6][#6][#6]1',1),  # NC1C(Br)CCC1
    878: ('Cl[#6]1[#6](Cl)[#6][#6][#6]1',1),  # ClC1C(Cl)CCC1
    879: ('Cl[#6]1[#6](Br)[#6][#6][#6]1',1),  # ClC1C(Br)CCC1
    880: ('Br[#6]1[#6](Br)[#6][#6][#6]1',1),  # BrC1C(Br)CCC1
}

pubchemKeys = None


def _InitKeys(keyList, keyDict):
  """ *Internal Use Only*

   generates SMARTS patterns for the keys, run once

  """
  assert len(keyList) == len(keyDict.keys()), 'length mismatch'
  for key in keyDict.keys():
    patt, count = keyDict[key]
    if patt != '?':
      sma = Chem.MolFromSmarts(patt)
      if not sma:
        print('SMARTS parser error for key #%d: %s' % (key, patt))
      else:
        keyList[key - 1] = sma, count


def _pyGenPubchemKeys(mol, **kwargs):
  """ generates the MACCS fingerprint for a molecules

   **Arguments**

     - mol: the molecule to be fingerprinted

     - any extra keyword arguments are ignored
     
   **Returns**

      a _DataStructs.SparseBitVect_ containing the fingerprint.

  >>> m = Chem.MolFromSmiles('CNO')
  >>> bv = GenPubchemKeys(m)
  >>> tuple(bv.GetOnBits())
  (24, 68, 69, 71, 93, 94, 102, 124, 131, 139, 151, 158, 160, 161, 164)
  >>> bv = GenPubchemKeys(Chem.MolFromSmiles('CCC'))
  >>> tuple(bv.GetOnBits())
  (74, 114, 149, 155, 160)

  """
  global pubchemKeys
  if pubchemKeys is None:
    pubchemKeys = [(None, 0)] * len(smartsPatts.keys())
    _InitKeys(pubchemKeys, smartsPatts)
  ctor = kwargs.get('ctor', DataStructs.SparseBitVect)

  res = ctor(len(pubchemKeys) + 1)
  for i, (patt, count) in enumerate(pubchemKeys):
    if patt is not None:
      if count == 0:
        res[i + 1] = mol.HasSubstructMatch(patt)
      else:
        matches = mol.GetSubstructMatches(patt)
        if len(matches) > count:
          res[i + 1] = 1
    elif (i + 1) == 125:
      # special case: num aromatic rings > 1
      ri = mol.GetRingInfo()
      nArom = 0
      res[125] = 0
      for ring in ri.BondRings():
        isArom = True
        for bondIdx in ring:
          if not mol.GetBondWithIdx(bondIdx).GetIsAromatic():
            isArom = False
            break
        if isArom:
          nArom += 1
          if nArom > 1:
            res[125] = 1
            break
    elif (i + 1) == 166:
      res[166] = 0
      # special case: num frags > 1
      if len(Chem.GetMolFrags(mol)) > 1:
        res[166] = 1

  return res


GenPubchemKeys = rdMolDescriptors.GetPubchemKeysFingerprint
FingerprintMol = rdMolDescriptors.GetPubchemKeysFingerprint


#------------------------------------
#
#  doctest boilerplate
#
def _test():
  import doctest, sys
  return doctest.testmod(sys.modules["__main__"])


if __name__ == '__main__':
  import sys
  failed, tried = _test()
  sys.exit(failed)
